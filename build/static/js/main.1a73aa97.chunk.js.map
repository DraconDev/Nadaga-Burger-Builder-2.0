{"version":3,"sources":["components/Navigation/Toolbar/Toolbar.module.css","components/Navigation/SideDrawer/SideDrawer.module.css","components/Logo/Logo.module.css","Assets/Images/burger-logo.png","components/Navigation/NavigationItems/NavigationItems.module.css","components/Navigation/NavigationItems/NavigationItem/NavigationItem.module.css","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.module.css","components/UI/Backdrop/Backdrop.module.css","hoc/Auxiliary/Auxiliary.js","components/Logo/Logo.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.jsx","components/Navigation/NavigationItems/NavigationItems.jsx","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.jsx","components/Navigation/Toolbar/Toolbar.jsx","components/UI/Backdrop/Backdrop.js","components/Navigation/SideDrawer/SideDrawer.jsx","hoc/Layout/Layout.jsx","components/Burger/BurgerIngredient/BurgerIngredient.jsx","components/Burger/Burger.jsx","components/Burger/BuildControls/BuildControl/BuildControl.jsx","components/Burger/BuildControls/BuildControls.jsx","components/UI/Modal/Modal.js","components/UI/Button/Button.jsx","components/Burger/OrderSummary/OrderSummary.js","containers/BurgerBuilder/BurgerBuilder.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Auxiliary","props","children","Logo","className","classes","style","height","src","burgerLogo","alt","NavigationItem","href","link","active","NavigationItems","DrawerToggle","onClick","clicked","Toolbar","toggleSideDrawer","DesktopOnly","Backdrop","console","log","show","SideDrawer","attachedClasses","open","Open","Close","join","closed","Layout","useState","showSideDrawer","state","setState","sideDrawerCloserHandler","prevState","BurgerIngredient","ingredient","type","Burger","transformedIngredients","Object","keys","ingredients","map","key","Array","_","i","reduce","arr","el","concat","length","buildControl","labels","removed","disabled","added","controls","label","BuildControls","price","toFixed","ctrl","ingredientAdded","ingredientRemoved","purchasable","ordered","Modal","React","memo","modalClosed","transform","opacity","Button","btnType","OrderSummary","ingredientSummary","igKey","textTransform","useEffect","purchaseCancelled","purchaseContinueHandler","INGREDIENT_PRICES","salad","cheese","meat","bacon","BurgerBuilder","totalPrice","purchasing","updatePurchaseState","sum","values","filter","purchaseHandler","params","disabledInfo","alert","prevIngredient","prevTotal","newState","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.1a73aa97.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar_Toolbar__35qeq\",\"Logo\":\"Toolbar_Logo__1hfdX\",\"DesktopOnly\":\"Toolbar_DesktopOnly__qnYvY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer_SideDrawer__r5HIf\",\"Open\":\"SideDrawer_Open__1XhMW\",\"Close\":\"SideDrawer_Close__bT93A\",\"Logo\":\"SideDrawer_Logo__36J6d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__1vMas\"};","module.exports = __webpack_public_path__ + \"static/media/burger-logo.b8503d26.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems_NavigationItems__1iwGc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem_NavigationItem__2gfcF\",\"active\":\"NavigationItem_active__1aijr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrawerToggle\":\"DrawerToggle_DrawerToggle__1n0mD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__3mm1F\"};","const Auxiliary = (props) => {\r\n  return props.children;\r\n};\r\n\r\nexport default Auxiliary;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport burgerLogo from \"../../Assets/Images/burger-logo.png\";\r\nimport \"./Logo.module.css\";\r\nimport classes from \"./Logo.module.css\";\r\nconst Logo = (props) => {\r\n  return (\r\n    <div className={classes.Logo} style={{ height: props.height }}>\r\n      <img src={burgerLogo} alt=\"MyBurger\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nLogo.propTypes = {};\r\n\r\nexport default Logo;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classes from \"./NavigationItem.module.css\";\r\nconst NavigationItem = (props) => {\r\n  return (\r\n    <li className={classes.NavigationItem}>\r\n      <a href={props.link} className={`${props.active ? \"active\" : null}`}>\r\n        {props.children}\r\n      </a>\r\n    </li>\r\n  );\r\n};\r\n\r\nNavigationItem.propTypes = {};\r\n\r\nexport default NavigationItem;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classes from \"./NavigationItems.module.css\";\r\nimport NavigationItem from \"./NavigationItem/NavigationItem\";\r\n\r\nconst NavigationItems = (props) => {\r\n  return (\r\n    <ul className={classes.NavigationItems}>\r\n      <NavigationItem link=\"/\" active>\r\n        Burger Builder\r\n      </NavigationItem>\r\n      <NavigationItem link=\"/\" active>\r\n        Checkout\r\n      </NavigationItem>\r\n    </ul>\r\n  );\r\n};\r\n\r\nNavigationItems.propTypes = {};\r\n\r\nexport default NavigationItems;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classes from \"./DrawerToggle.module.css\";\r\n\r\nconst DrawerToggle = (props) => {\r\n  return (\r\n    <div className={classes.DrawerToggle} onClick={props.clicked}>\r\n      <div className=\"\"></div>\r\n      <div className=\"\"></div>\r\n      <div className=\"\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nDrawerToggle.propTypes = {};\r\n\r\nexport default DrawerToggle;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Toolbar.module.css\";\r\nimport classes from \"./Toolbar.module.css\";\r\nimport Logo from \"../../Logo/Logo\";\r\nimport NavigationItems from \"../NavigationItems/NavigationItems\";\r\nimport moduleName from \"../SideDrawer/DrawerToggle/DrawerToggle\";\r\nimport DrawerToggle from \"../SideDrawer/DrawerToggle/DrawerToggle\";\r\n\r\nconst Toolbar = (props) => {\r\n  return (\r\n    <header className={classes.Toolbar}>\r\n      <DrawerToggle clicked={props.toggleSideDrawer} />\r\n      {/* <div className=\"\" onClick={props.toggleSideDrawer}>\r\n        Menu\r\n      </div> */}\r\n      <div className={classes.Logo}>\r\n        <Logo />\r\n      </div>\r\n      <nav className={classes.DesktopOnly}>\r\n        <NavigationItems />\r\n      </nav>\r\n    </header>\r\n  );\r\n};\r\n\r\nToolbar.propTypes = {};\r\n\r\nexport default Toolbar;\r\n","import React from \"react\";\r\nimport classes from \"./Backdrop.module.css\";\r\n\r\nconst Backdrop = (props) => {\r\n  console.log(\"Backdrop\", props);\r\n  return props.show ? (\r\n    <div className={classes.Backdrop} onClick={props.clicked}></div>\r\n  ) : null;\r\n};\r\n\r\nexport default Backdrop;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Logo from \"../../Logo/Logo\";\r\nimport NavigationItems from \"../NavigationItems/NavigationItems\";\r\nimport classes from \"./SideDrawer.module.css\";\r\nimport Backdrop from \"../../UI/Backdrop/Backdrop\";\r\nimport Auxiliary from \"../../../hoc/Auxiliary/Auxiliary\";\r\n\r\nconst SideDrawer = (props) => {\r\n  const attachedClasses = [\r\n    classes.SideDrawer,\r\n    props.open ? classes.Open : classes.Close,\r\n  ].join(\" \");\r\n  console.log(\"SideDrawer\", attachedClasses);\r\n  return (\r\n    <Auxiliary>\r\n      <Backdrop show={props.open} clicked={props.closed} />\r\n      <div className={attachedClasses}>\r\n        <div className={classes.Logo}>\r\n          <Logo />\r\n        </div>\r\n        <nav>\r\n          <NavigationItems />\r\n        </nav>\r\n      </div>\r\n    </Auxiliary>\r\n  );\r\n};\r\n\r\nSideDrawer.propTypes = {};\r\n\r\nexport default SideDrawer;\r\n","import React, { useState } from \"react\";\r\nimport Auxiliary from \"../Auxiliary/Auxiliary\";\r\n// import classes from \"./Layout.css\";\r\nimport \"./Layout.css\";\r\nimport Toolbar from \"../../components/Navigation/Toolbar/Toolbar\";\r\nimport SideDrawer from \"../../components/Navigation/SideDrawer/SideDrawer\";\r\n\r\n// console.log(classes);\r\n\r\nconst Layout = (props) => {\r\n  const [state, setState] = useState({ showSideDrawer: true });\r\n  const sideDrawerCloserHandler = () => {\r\n    // setState({ ...state, showSideDrawer: !state.showSideDrawer });\r\n    setState((prevState) => {\r\n      return { ...prevState, showSideDrawer: !prevState.showSideDrawer };\r\n    });\r\n  };\r\n  return (\r\n    <Auxiliary>\r\n      <Toolbar toggleSideDrawer={sideDrawerCloserHandler} />\r\n      <SideDrawer\r\n        open={state.showSideDrawer}\r\n        closed={sideDrawerCloserHandler}\r\n      />\r\n      <main className=\"Content\">{props.children}</main>\r\n    </Auxiliary>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./BurgerIngredient.scss\";\r\n\r\nconst BurgerIngredient = props => {\r\n  let ingredient = null;\r\n\r\n  switch (props.type) {\r\n    case \"bread-bottom\":\r\n      ingredient = <div className=\"BreadBottom\"></div>;\r\n      break;\r\n    case \"bread-top\":\r\n      ingredient = (\r\n        <div className=\"BreadTop\">\r\n          <div className=\"Seeds1\"></div>\r\n          <div className=\"Seeds2\"></div>\r\n        </div>\r\n      );\r\n      break;\r\n    case \"meat\":\r\n      ingredient = <div className=\"Meat\"> </div>;\r\n      break;\r\n    case \"bacon\":\r\n      ingredient = <div className=\"Bacon\"> </div>;\r\n      break;\r\n    case \"salad\":\r\n      ingredient = <div className=\"Salad\"> </div>;\r\n      break;\r\n    case \"cheese\":\r\n      ingredient = <div className=\"Cheese\"> </div>;\r\n      break;\r\n    default:\r\n      ingredient = null;\r\n  }\r\n  BurgerIngredient.propTypes = {\r\n    type: PropTypes.string.isRequired\r\n  };\r\n  if (ingredient) {\r\n    return ingredient;\r\n  }\r\n  //   return ingredient;\r\n};\r\n\r\nexport default BurgerIngredient;\r\n","import React from \"react\";\r\nimport \"./Burger.scss\";\r\nimport BurgerIngredient from \"./BurgerIngredient/BurgerIngredient\";\r\n\r\nconst Burger = (props) => {\r\n  let transformedIngredients = Object.keys(props.ingredients).map((key) => {\r\n    return [...Array(props.ingredients[key])]\r\n      .map((_, i) => {\r\n        return <BurgerIngredient key={key + i} type={key} />;\r\n      })\r\n      .reduce((arr, el) => {\r\n        return arr.concat(el);\r\n      }, []);\r\n  });\r\n  if (transformedIngredients.length === 0) {\r\n    transformedIngredients = <p>Please add ingredients</p>;\r\n  }\r\n  console.log();\r\n\r\n  return (\r\n    <div className=\"Burger\">\r\n      <BurgerIngredient type=\"bread-top\" />\r\n      {transformedIngredients}\r\n      <BurgerIngredient type=\"bread-bottom\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Burger;\r\n","import React from \"react\";\r\nimport \"./BuildControl.scss\";\r\n\r\n// const buildControl = (props) => {\r\n//   return (\r\n//     <div>\r\n//       <div className={classes.BuildControl}>{props.labels}</div>\r\n//       <button className={classes.Label}>Less</button>\r\n//       <button className={classes.Label}>More</button>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\nconst buildControl = (props) => {\r\n  return (\r\n    <div>\r\n      <div className=\"BuildControl\">{props.labels}</div>\r\n      <button\r\n        className=\"Label\"\r\n        onClick={props.removed}\r\n        disabled={props.disabled}\r\n      >\r\n        Less\r\n      </button>\r\n      <button className=\"Label\" onClick={props.added}>\r\n        More\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default buildControl;\r\n","import React from \"react\";\r\n// import classes from \"./BuildControls.scss\";\r\nimport BuildControl from \"./BuildControl/BuildControl\";\r\nimport \"./BuildControls.scss\";\r\n\r\nconst controls = [\r\n  { label: \"Salad\", type: \"salad\" },\r\n  { label: \"Bacon\", type: \"bacon\" },\r\n  { label: \"Cheese\", type: \"cheese\" },\r\n  { label: \"Meat\", type: \"meat\" },\r\n];\r\n\r\n// const BuildControls = (props) => {\r\n//   return (\r\n//     <div className={classes.BuildControls}>\r\n//       {controls.map((ctrl) => (\r\n//         <BuildControl key={ctrl.label} label={ctrl.label} />\r\n//       ))}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\nconst BuildControls = (props) => {\r\n  console.log(\"BuildControlsProps\", props);\r\n  return (\r\n    <div className=\"BuildControls\">\r\n      <p>Current price: {props.price.toFixed(2)}</p>\r\n      {controls.map((ctrl) => (\r\n        <BuildControl\r\n          key={ctrl.label}\r\n          label={ctrl.label}\r\n          added={() => props.ingredientAdded(ctrl.type)}\r\n          removed={() => props.ingredientRemoved(ctrl.type)}\r\n          disabled={props.disabled[ctrl.type]}\r\n        />\r\n      ))}\r\n      <button\r\n        disabled={!props.purchasable}\r\n        className=\"OrderButton\"\r\n        onClick={props.ordered}\r\n      >\r\n        ORDER NOW\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BuildControls;\r\n","import React from \"react\";\r\nimport \"./Modal.css\";\r\nimport Auxiliary from \"../../../hoc/Auxiliary/Auxiliary\";\r\nimport Backdrop from \"../Backdrop/Backdrop\";\r\n\r\nconst Modal = React.memo((props) => {\r\n  return (\r\n    <Auxiliary>\r\n      <Backdrop show={props.show} clicked={props.modalClosed} />\r\n      <div\r\n        className=\"Modal\"\r\n        style={{\r\n          transform: props.show ? \"translateY(0)\" : \"translateY(-100vh)\",\r\n          opacity: props.show ? \"1\" : \"0\",\r\n        }}\r\n      >\r\n        {props.children}\r\n      </div>\r\n    </Auxiliary>\r\n  );\r\n});\r\n\r\n// export default useMemo(Modal);\r\nexport default Modal;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Button.scss\";\r\n\r\nconst Button = (props) => {\r\n  console.log(\"Button\", props);\r\n  return (\r\n    <button className={`Button ${props.btnType}`} onClick={props.clicked}>\r\n      {props.children}\r\n    </button>\r\n  );\r\n};\r\n\r\n// Button.propTypes = {};\r\n\r\nexport default Button;\r\n","import React, { useEffect } from \"react\";\r\nimport Auxiliary from \"../../../hoc/Auxiliary/Auxiliary\";\r\nimport Button from \"../../UI/Button/Button\";\r\n\r\nconst OrderSummary = (props) => {\r\n  const ingredientSummary = Object.keys(props.ingredients).map((igKey) => {\r\n    return (\r\n      <li>\r\n        <span style={{ textTransform: \"capitalize\" }}>{igKey}</span>:{\" \"}\r\n        {props.ingredients[igKey]}\r\n      </li>\r\n    );\r\n  });\r\n\r\n  useEffect(() => {\r\n    console.log(\"OrderSummary\", \"Update test\");\r\n  });\r\n\r\n  return (\r\n    <Auxiliary>\r\n      <h3>Your orderSummary</h3>\r\n      <p>Burger with ingredients:</p>\r\n      <ul>{ingredientSummary}</ul>\r\n      <p>Total price: {props.price.toFixed(2)}</p>\r\n      <p>Continue to Checkout?</p>\r\n      <Button btnType=\"Danger\" clicked={props.purchaseCancelled}>\r\n        CANCEL\r\n      </Button>\r\n      <Button btnType=\"Success\" clicked={props.purchaseContinueHandler}>\r\n        CONTINUE\r\n      </Button>\r\n    </Auxiliary>\r\n  );\r\n};\r\n\r\nexport default OrderSummary;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Auxiliary from \"../../hoc/Auxiliary/Auxiliary\";\r\nimport Burger from \"../../components/Burger/Burger\";\r\nimport BuildControls from \"../../components/Burger/BuildControls/BuildControls\";\r\nimport Modal from \"../../components/UI/Modal/Modal\";\r\nimport OrderSummary from \"../../components/Burger/OrderSummary/OrderSummary\";\r\n\r\nconst INGREDIENT_PRICES = {\r\n  salad: 0.5,\r\n  cheese: 0.4,\r\n  meat: 1.3,\r\n  bacon: 0.7,\r\n};\r\n\r\nfunction BurgerBuilder() {\r\n  const [state, setState] = useState({\r\n    ingredients: {\r\n      salad: 0,\r\n      bacon: 0,\r\n      cheese: 0,\r\n      meat: 0,\r\n    },\r\n    totalPrice: 4,\r\n    purchasable: false,\r\n    purchasing: false,\r\n  });\r\n\r\n  const updatePurchaseState = (props) => {\r\n    const ingredients = { ...props.ingredients };\r\n    const sum = Object.values(ingredients).filter((el) => el > 0).length;\r\n    // console.log(\"updatePurchaseState\", props, state, sum, ingredients);\r\n    setState({ ...props, purchasable: sum ? true : false });\r\n  };\r\n\r\n  // useEffect(() => {\r\n  //   const ingredients = { ...state.ingredients };\r\n  //   const sum = Object.values(ingredients).filter((el) => el > 0).length;\r\n  //   setState({ ...state, purchasable: sum ? true : false });\r\n  // }, [state.ingredients]);\r\n\r\n  const addIngredientHandler = (type) => {\r\n    // console.log(\"addIngredientHandler\", state, type);\r\n    const prevIngredient = state.ingredients[type];\r\n    const prevTotal = state.totalPrice;\r\n    const newState = {\r\n      ...state,\r\n      ingredients: { ...state.ingredients, [type]: prevIngredient + 1 },\r\n      totalPrice: prevTotal + INGREDIENT_PRICES[type],\r\n    };\r\n    setState({ ...newState });\r\n    updatePurchaseState({ ...newState });\r\n  };\r\n\r\n  const purchaseHandler = (params) => {\r\n    setState({ ...state, purchasing: !state.purchasing });\r\n    console.log(\"purchaseHandler\", state);\r\n  };\r\n\r\n  const purchaseContinueHandler = (params) => {\r\n    alert(\"Continue\");\r\n  };\r\n\r\n  const removeIngredientHandler = (type) => {\r\n    if (state.ingredients[type] <= 0) {\r\n      return;\r\n    }\r\n    const prevIngredient = state.ingredients[type];\r\n    const prevTotal = state.totalPrice;\r\n    const newState = {\r\n      ...state,\r\n      ingredients: { ...state.ingredients, [type]: prevIngredient - 1 },\r\n      totalPrice: prevTotal - INGREDIENT_PRICES[type],\r\n    };\r\n    setState({ ...newState });\r\n    updatePurchaseState({ ...newState });\r\n  };\r\n\r\n  const { salad, bacon, cheese, meat } = state;\r\n\r\n  const disabledInfo = {\r\n    ...state.ingredients,\r\n  };\r\n  for (let key in disabledInfo) {\r\n    disabledInfo[key] = disabledInfo[key] <= 0;\r\n  }\r\n  return (\r\n    <Auxiliary>\r\n      <Modal show={state.purchasing} modalClosed={purchaseHandler}>\r\n        <OrderSummary\r\n          ingredients={state.ingredients}\r\n          purchaseCancelled={purchaseHandler}\r\n          purchaseContinueHandler={purchaseContinueHandler}\r\n          price={state.totalPrice}\r\n        />\r\n      </Modal>\r\n      <Burger {...state} />\r\n      <BuildControls\r\n        ingredientAdded={addIngredientHandler}\r\n        ingredientRemoved={removeIngredientHandler}\r\n        disabled={disabledInfo}\r\n        purchasable={state.purchasable}\r\n        price={state.totalPrice}\r\n        ordered={purchaseHandler}\r\n      />\r\n    </Auxiliary>\r\n  );\r\n}\r\n\r\nexport default BurgerBuilder;\r\n","import React from \"react\";\nimport Layout from \"../src/hoc/Layout/Layout\";\nimport BurgerBuilder from \"./containers/BurgerBuilder/BurgerBuilder\";\n\nfunction App() {\n  return (\n    <div>\n      <Layout>\n        <BurgerBuilder />\n      </Layout>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}